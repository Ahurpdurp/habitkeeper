{"ast":null,"code":"var _jsxFileName = \"/Users/ahurpdurp/Desktop/habitkeeper/Client/src/Myhabits.js\";\nimport React, { Component } from 'react';\nimport Calendar from 'simple-react-calendar';\nimport './Myhabits.css';\nlet habits = [{\n  id: 1,\n  habit: \"Work Out\",\n  commitment: 7,\n  startDate: '2019-4-19',\n  endDate: '2019-9-29'\n}];\nexport class MyHabits extends Component {\n  constructor() {\n    super();\n    this.state = {\n      habits: habits,\n      test: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/').then(response => response.json()).then(response => this.setState({\n      test: response\n    }));\n  }\n\n  render() {\n    let calendarRender = this.state.habits.map(row => {\n      let totalDays = Math.floor((new Date(row.endDate) - new Date(row.startDate)) / (1000 * 60 * 60 * 24) + 1);\n      let daysPassed = Math.floor((Date.now() - new Date(row.startDate)) / (1000 * 60 * 60 * 24));\n      let dollarsEarnedBack = Math.floor(daysPassed / totalDays * row.commitment * 100) / 100;\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, row.habit), React.createElement(\"div\", {\n        className: \"calendars\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Calendar, {\n        maxDate: '2000-01-01',\n        activeMonth: new Date(row.startDate),\n        mode: 'range',\n        selected: {\n          start: new Date(row.startDate),\n          end: new Date(row.startDate)\n        },\n        weekStartsOn: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Calendar, {\n        maxDate: '2000-01-01',\n        activeMonth: new Date(row.endDate),\n        mode: 'range',\n        selected: {\n          start: new Date(row.endDate),\n          end: new Date(row.endDate)\n        },\n        weekStartsOn: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Pledge Amount: $\", row.commitment), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Total Days: \", totalDays, \" Days\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Days Completed: \", daysPassed, \" Days\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"You've earned $\", dollarsEarnedBack, \" back. Keep it up!\"));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"habits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, calendarRender));\n  }\n\n}","map":{"version":3,"sources":["/Users/ahurpdurp/Desktop/habitkeeper/Client/src/Myhabits.js"],"names":["React","Component","Calendar","habits","id","habit","commitment","startDate","endDate","MyHabits","constructor","state","test","componentDidMount","fetch","then","response","json","setState","render","calendarRender","map","row","totalDays","Math","floor","Date","daysPassed","now","dollarsEarnedBack","start","end"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Calendar from 'simple-react-calendar'\nimport './Myhabits.css'\n\n\nlet habits = [\n    {\n        id:1,\n        habit:\"Work Out\",\n        commitment:7,\n        startDate: '2019-4-19',\n        endDate: '2019-9-29'\n    }\n]\n\n\nexport class MyHabits extends Component {\n    constructor(){\n        super()\n        this.state = {\n            habits:habits,\n            test:[]\n        }\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:8080/')\n        .then(response => response.json())\n        .then(response => this.setState({\n            test:response\n        }))\n    }\n\n    render(){\n        let calendarRender = this.state.habits.map(row => {\n        let totalDays = Math.floor((new Date(row.endDate) - new Date(row.startDate))/(1000*60*60*24) + 1)\n        let daysPassed = Math.floor((Date.now() - new Date(row.startDate))/(1000*60*60*24))\n        let dollarsEarnedBack = Math.floor((daysPassed / totalDays) * row.commitment * 100)/100\n\n            return (\n                <li>\n                    <h1>{row.habit}</h1>\n                    <div className = 'calendars'>\n                      <Calendar maxDate = {'2000-01-01'} activeMonth = {new Date(row.startDate)} mode = {'range'} selected = {{start: new Date(row.startDate), end: new Date(row.startDate)}} weekStartsOn = {0} />\n                      <Calendar maxDate = {'2000-01-01'} activeMonth = {new Date(row.endDate)} mode = {'range'} selected = {{start: new Date(row.endDate), end: new Date(row.endDate)}} weekStartsOn = {0} />\n                    </div>\n                    <h4>Pledge Amount: ${row.commitment}</h4>\n                    <h5>Total Days: {totalDays} Days</h5>\n                    <h5>Days Completed: {daysPassed} Days</h5>\n                    <h5>You've earned ${dollarsEarnedBack} back. Keep it up!</h5>\n                </li>\n            )\n        })\n\n        return(\n            <div>\n                <ul className = 'habits'>\n                {calendarRender}\n                </ul>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}